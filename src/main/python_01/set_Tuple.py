# 集合( set ) とタプル( Tuple )

# 集合( set )とは？
#    ・複数の値を１つにまとめたもの
#    ・順序がない        リストと似ているが インデックスがない
#    ・同じ値を持てない
#    ・波括弧で要素を囲む  x = {1, 2, 4} <- 辞書と似た記述
#    ・初心者の内は集合はあまり使わない
#    ・和集合、差集合、積集合が取得できる


# 要素の追加
#    集合.add( 要素 )
x = {1, 2, 4}
x.add( 7 )   # 7が追加される


# 要素の削除    discard  remove
#    集合.discard( 要素 )
x = {1, 2, 4}
x.discard( 2 )   # 2が削除される  指定した値が無くてもOK

#    集合.remove( 要素 )
x = {1, 2, 4}
x.remove( 2 )   # 2が削除される  指定した値が無い場合はエラー


# 空の集合
x = set( )      # java のset関数と同じかも？


# 集合の特性     和集合、差集合、積集合 が取得できる
#    和集合    集合x と 集合y を合わせる
x = {0, 1, 3, 6}
y = {0, 2, 5, 6}

z = x | y       # {0, 1, 2, 3, 5, 6} の集合が出来る

#    差集合      片方の集合からもう片方の集合に含まれる要素を削除
z = x - y       # {1, 3}  集合x から集合y の要素をごっそり削除

#    積集合       ２つの集合に共通の要素を全て集めた集合
z = x & y       # {0, 6}



# タプル( Tuple )
#    ・複数の値を１つにまとめたもの
#    ・順序がある       インデックス有りなのでアクセス出来る
#    ・同じ値を持てる
#    ・丸括弧で要素を囲む  x = ( 1, 2, 4 ) <- 辞書と似た記述
#    ・値を変更できない
#    ・関数の中でよく出てくる、勝手に使ってる感じ
#    ・java にはない機能


# インデックスを指定して要素を取得
#   タプル[ インデックス ]
x = ( "A", "B", "C", "D" )
y = x[2]
print(y)

# 複数の要素で１つのデータとして表される様なもの
#   地上の位置 -> 経度・緯度
tokyo_st_pos = ( 35.6809591, 139.7673068 )
print( f"東京の座標は{tokyo_st_pos}になります")









